/* -*- mode: c++; coding: utf-8; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4; show-trailing-whitespace: t  -*- */

/**
 * @file   options.cpp
 * @author Abdoulaye Samake <abdoulaye.samake@nersc.no>
 * @date   Tue Jul 14 13:23:45 2015
 */


#include <boost/program_options.hpp>

namespace po = boost::program_options;

namespace Nextsim
{
    po::options_description
    descrOptions()
    {
        po::options_description desc("Options");

        desc.add_options()
            ("help,h", "Print help messages")
            ("config-file", po::value<std::string>(), "specify a configuration file")
            ("config-files", po::value<std::vector<std::string> >()->multitoken(), "specify a list of configuration files" )
            ("hsize", po::value<double>()->default_value( 0.01 ), "")
            ("simul_in.use_simul_out", po::value<bool>()->default_value( false ), "")
            ("simul_in.step_nb", po::value<bool>()->default_value( false ), "")
            ("simul_in.time_init", po::value<std::string>()->default_value( "05-Mar-2008 00:00:00" ), "")
            ("simul_in.spinup_duration", po::value<double>()->default_value( 1. ), "")
            ("output_per_day", po::value<int>()->default_value( 4 ), "")
            ("simul_in.output_timestep", po::value<double>()->default_value( 0.25 ), "")
            ("simul_in.diagnostics_frequency", po::value<int>()->default_value( 1 ), "")
            ("simul_in.save_forcing_field", po::value<bool>()->default_value( false ), "")
            ("simul_in.forecast", po::value<bool>()->default_value( false ), "")
            ("simul_in.use_ship", po::value<bool>()->default_value( false ), "")
            ("simul_in.use_moorings", po::value<bool>()->default_value( false ), "")
            ("simul_in.mooring_names", po::value<std::vector<std::string>>()->multitoken()->zero_tokens()->composing(), "")
            ("simul_in.mooring_spacing", po::value<double>()->default_value( std::numeric_limits<double>::infinity() ), "")
            ("simul_in.moorings_output_timestep", po::value<double>()->default_value( std::numeric_limits<double>::infinity() ), "")
            ("simul_in.slim_bin.use", po::value<bool>()->default_value( false ), "")
            ("simul_in.slim_bin.names", po::value<std::vector<std::string>>()->multitoken()->zero_tokens()->composing(), "")
            ("simul_in.slim_bin.output_timestep", po::value<double>()->default_value( std::numeric_limits<double>::infinity() ), "")
            ("simul_in.drifters", po::value<bool>()->default_value( false ), "")
            ("simul_in.drifters_output_timestep", po::value<double>()->default_value( std::numeric_limits<double>::infinity() ), "")
            ("simul_in.drifter_climit", po::value<double>()->default_value( 0.15 ), "")
            ("simul_in.reduce_domain_to_sea_ice", po::value<bool>()->default_value( true ), "")
            ("simul_in.transport_scheme", po::value<std::string>()->default_value( "lagrangian" ), "")
            ("simul_in.regrid", po::value<std::string>()->default_value( "No-regridding" ), "")
            ("simul_in.regrid_output_flag", po::value<bool>()->default_value( false ), "")
            ("simul_in.regrid_angle", po::value<double>()->default_value( 10. ), "")
            ("simul_in.interp_with_cavities", po::value<bool>()->default_value( true ), "")
            ("simul_in.interp_forcing_every_timestep", po::value<bool>()->default_value( false ), "")
            ("simul_in.use_bathymetry", po::value<bool>()->default_value( true ), "")
            ("simul_in.scale_coef", po::value<double>()->default_value( 0.1 ), "")
            ("simul_in.alea_factor", po::value<double>()->default_value( 0. ), "")
            ("simul_in.ridging_exponent", po::value<double>()->default_value( -40. ), "")
            ("simul_in.fixed_cohesion", po::value<bool>()->default_value( true ), "")
            ("simul_in.divergence_min", po::value<double>()->default_value( 0.01 ), "")
            ("simul_in.compression_factor", po::value<double>()->default_value( 12000. ), "")
            ("simul_in.exponent_compression_factor", po::value<double>()->default_value( 2. ), "")
            ("simul_in.init_damage", po::value<std::string>()->default_value( "No-damage" ), "")
            ("simul_in.time_relaxation_damage", po::value<double>()->default_value( 14. ), "")
            ("simul_in.deltaT_relaxation_damage", po::value<double>()->default_value( 40. ), "")
            ("simul_in.Young", po::value<double>()->default_value( 9000e+6 ), "")
            ("simul_in.cfix", po::value<double>()->default_value( 40e+3 ), "")
            ("simul_in.nu0", po::value<double>()->default_value( 0.3 ), "")
            ("simul_in.tan_phi", po::value<double>()->default_value( 0.7 ), "")
            ("simul_in.tract_coef", po::value<double>()->default_value( 5./6 ), "")
            ("simul_in.compr_strength", po::value<double>()->default_value( 100e+3 ), "")
            ("simul_in.rheology_scaling", po::value<bool>()->default_value( false ), "")
            ("simul_in.rheology_scaling_ref_dx", po::value<double>()->default_value( 10. ), "")
            ("simul_in.rheology_scaling_factor", po::value<double>()->default_value( -0.0638 ), "")
            ("simul_in.Lemieux_basal_k1", po::value<double>()->default_value( 10. ), "")
            ("simul_in.Lemieux_basal_k2", po::value<double>()->default_value( 15. ), "")
            ("simul_in.Lemieux_drag_coef_air", po::value<double>()->default_value( 0.0012 ), "")
            ("simul_in.Lemieux_basal_Cb", po::value<double>()->default_value( 20. ), "")
            ("simul_in.Lemieux_basal_u_0", po::value<double>()->default_value( 5e-5 ), "")
            ("simul_in.Lemieux_basal_u_crit", po::value<double>()->default_value( 5e-4 ), "")
            ("simul_in.albedoW", po::value<double>()->default_value( 0.07 ), "")
            ("simul_in.read_hw", po::value<double>()->default_value( 1. ), "")
            ("simul_in.hw", po::value<double>()->default_value( 9. ), "")
            ("simul_in.alb_scheme", po::value<std::string>()->default_value( "Albedo" ), "")
            ("simul_in.flooding", po::value<bool>()->default_value( true ), "")
            ("simul_in.alb_ice", po::value<double>()->default_value( 0.64 ), "")
            ("simul_in.alb_sn", po::value<double>()->default_value( 0.85 ), "")
            ("simul_in.I_0", po::value<double>()->default_value( 0.17 ), "")
            ("simul_in.Qdw", po::value<double>()->default_value( 0.5 ), "")
            ("simul_in.Fdw", po::value<double>()->default_value( 0. ), "")
            ("simul_in.PhiM", po::value<double>()->default_value( 0.5 ), "")
            ("simul_in.newice_type", po::value<std::string>()->default_value( "Hibler" ), "")
            ("simul_in.PhiM", po::value<double>()->default_value( 0.5 ), "")
            ("simul_in.hnull", po::value<double>()->default_value( 0.25 ), "")
            ("simul_in.PhiF", po::value<double>()->default_value( 4. ), "")
            ("simul_in.h_thin_max", po::value<double>()->default_value( 0.5 ), "")
            ("simul_in.c_thin_max", po::value<double>()->default_value( 1. ), "")
            ("simul_in.ERAcorr2T", po::value<std::vector<std::string>>()->multitoken()->zero_tokens()->composing(), "")
            ("simul_in.gravit", po::value<double>()->default_value( 9.80616 ), "")
            ("simul_in.omega", po::value<double>()->default_value( 7.292e-5 ), "")
            ("simul_in.rho_air", po::value<double>()->default_value( 1.3 ), "")
            ("simul_in.use_stability_drag", po::value<double>()->default_value( 0. ), "")
            ("simul_in.drag_ice_t", po::value<double>()->default_value( 1.3e-3 ), "")
            ("simul_in.drag_ocean_u", po::value<double>()->default_value( 1.1e-3 ), "")
            ("simul_in.drag_ocean_t", po::value<double>()->default_value( 0.83e-3 ), "")
            ("simul_in.drag_ocean_q", po::value<double>()->default_value( 1.5e-3 ), "")
            ("simul_in.ASR_quad_drag_coef_air", po::value<double>()->default_value( 0.0076 ), "")
            ("simul_in.ERAi_quad_drag_coef_air", po::value<double>()->default_value( 0.0020 ), "")
            ("simul_in.ECMWF_quad_drag_coef_air", po::value<double>()->default_value( 0.0020 ), "")
            ("simul_in.ASRFINAL_quad_drag_coef_air", po::value<double>()->default_value( 0.0037 ), "")
            ("simul_in.lin_drag_coef_air", po::value<double>()->default_value( 0. ), "")
            ("simul_in.rho_water", po::value<double>()->default_value( 1025. ), "")
            ("simul_in.quad_drag_coef_water", po::value<double>()->default_value( 0.0055 ), "")
            ("simul_in.lin_drag_coef_water", po::value<double>()->default_value( 0. ), "")
            ("simul_in.oceanic_turning_angle", po::value<double>()->default_value( 25. ), "")
            ("simul_in.drift_limit_concentration", po::value<double>()->default_value( 0.05 ), "")
            ("simul_in.min_h", po::value<double>()->default_value( 0. ), "")
            ("simul_in.min_c", po::value<double>()->default_value( 0. ), "")
            ("simul_in.ridge_h", po::value<double>()->default_value( 3. ), "")
            ("simul_in.scale_coef", po::value<double>()->default_value( 0.1 ), "")
            ("simul_in.close_all_boundaries", po::value<bool>()->default_value( false ), "")
            ("simul_in.init_thickness", po::value<bool>()->default_value( true ), "")
            ("simul_in.init_concentration", po::value<double>()->default_value( 0.9 ), "")
            ("simul_in.init_thin_max_thickness", po::value<double>()->default_value( 0.1 ), "")
            ("simul_in.init_snow_thickness", po::value<double>()->default_value( 0. ), "")
            ("simul_in.init_snow_thin_thickness", po::value<double>()->default_value( 0. ), "")
            ("simul_in.constant_v", po::value<double>()->default_value( -10. ), "")
            ;
        return desc;
    }

} // WIMOPT
